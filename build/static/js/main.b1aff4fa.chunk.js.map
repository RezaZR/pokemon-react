{"version":3,"sources":["assets/pokemon.svg","components/Pokemon/PokemonDetails.jsx","components/Pokemon/PokemonList.jsx","components/Pokemon/Pokemon.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PokemonDetails","props","attribute","className","src","PokemonLogo","alt","types","map","type","index","key","image","name","id","stats","stat","title","value","abilities","ability","moves","move","PokemonList","state","url","urlType","previous","next","pokemons","lastSelectedPokemon","isFiltered","limit","offset","handleChange","bind","this","getPokemon","result","setPokemon","axios","get","resultType","setState","data","results","document","querySelector","classList","remove","e","getSelectedPokemon","removeLastSelectedPokemon","target","add","inputList","pokemon","direction","parseInt","dataset","nextSibling","handleClick","previousSibling","newLimit","newOffset","length","pokemonList","slice","data-index","data-url","onClick","clearButton","handleClickFilter","htmlFor","list","onChange","handleNavigation","Component","Pokemon","selectedAttribute","getUrl","a","sprites","front_default","base_stat","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b1aff4fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon.6b4ffa55.svg\";","import React from \"react\";\n\nimport PokemonLogo from \"../../assets/pokemon.svg\";\n\nconst PokemonDetails = (props) => {\n  const attribute = props.attribute;\n\n  if (attribute === null) {\n    return (\n      <div className=\"pokemon__details hide-scrollbar\">\n        <div className=\"pokemon__details__identifier\">\n          <img\n            className=\"pokemon__details__identifier__logo\"\n            src={PokemonLogo}\n            alt=\"Pokemon Logo\"\n          />\n\n          <div className=\"pokemon__details__identifier__empty\">\n            <h1>Welcome!</h1>\n            <h5>Click pokemon to see the details</h5>\n          </div>\n        </div>\n\n        <div className=\"pokemon__details__stats\">\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n\n          <div className=\"pokemon__details__stats__box col-4\">\n            <div>&nbsp;</div>\n            <div>&nbsp;</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"pokemon__details hide-scrollbar\">\n        <div className=\"pokemon__details__identifier\">\n          <img\n            className=\"pokemon__details__identifier__logo\"\n            src={PokemonLogo}\n            alt=\"Pokemon Logo\"\n          />\n\n          <div className=\"pokemon__details__identifier__type\">\n            {attribute.types.map((type, index) => (\n              <span key={index}>{type}</span>\n            ))}\n          </div>\n\n          <img\n            className=\"pokemon__details__identifier__image\"\n            src={attribute.image}\n            alt={attribute.name + \"'s image\"}\n          />\n\n          <p>\n            #{attribute.id}.&nbsp;{attribute.name}\n          </p>\n        </div>\n\n        <div className=\"pokemon__details__stats\">\n          {attribute.stats.map((stat, index) => (\n            <div className=\"pokemon__details__stats__box col-4\" key={index}>\n              <div>{stat.title}</div>\n              <div>{stat.value}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"pokemon__details__ability\">\n          <div>Abilities:</div>\n          {attribute.abilities.map((ability, index) => (\n            <span key={index}>{ability}</span>\n          ))}\n        </div>\n\n        <div className=\"pokemon__details__panel\">\n          {attribute.moves.map((move, index) => (\n            <span key={index}>{move}</span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default PokemonDetails;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nexport default class PokemonList extends Component {\n  state = {\n    url: \"https://pokeapi.co/api/v2/pokemon?limit=10\",\n    urlType: \"https://pokeapi.co/api/v2/type\",\n    previous: null,\n    next: null,\n    pokemons: null,\n    lastSelectedPokemon: null,\n    types: null,\n    isFiltered: false,\n    limit: null,\n    offset: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const result = await this.getPokemon(this.state.url);\n    this.setPokemon(result);\n\n    const resultType = await axios.get(this.state.urlType);\n    this.setState({\n      types: resultType.data.results.map((result) => {\n        return result.name;\n      }),\n    });\n  }\n\n  getPokemon(url) {\n    return axios.get(url);\n  }\n\n  setPokemon(result) {\n    this.setState({\n      previous: result.data.previous,\n      next: result.data.next,\n      pokemons: result.data[\"results\"],\n    });\n  }\n\n  removeLastSelectedPokemon() {\n    if (this.state.lastSelectedPokemon !== null)\n      document.querySelector(\n        `[data-index=${this.state.lastSelectedPokemon.classList.remove(\n          \"active\"\n        )}]`\n      );\n  }\n\n  handleClick(e, url, type) {\n    this.props.getSelectedPokemon(url);\n    this.removeLastSelectedPokemon();\n    if (type === \"click\") {\n      this.setState({ lastSelectedPokemon: e.target });\n      e.target.classList.add(\"active\");\n    } else {\n      this.setState({ lastSelectedPokemon: e });\n      e.classList.add(\"active\");\n    }\n  }\n\n  handleClickFilter() {\n    let inputList = document.querySelector(\"#type_list\");\n    inputList.value = \"\";\n    this.handleChange(inputList, \"filter\");\n  }\n\n  async handleChange(e, type) {\n    let value = null;\n    type === \"datalist\" ? (value = e.target.value) : (value = e.value);\n\n    this.removeLastSelectedPokemon();\n\n    if (value === \"\") {\n      const result = await this.getPokemon(this.state.url);\n      this.setPokemon(result);\n      this.setState({\n        lastSelectedPokemon: null,\n        isFiltered: false,\n        limit: null,\n        offset: null,\n      });\n    } else {\n      const resultType = await axios.get(\n        this.state.urlType + `/${e.target.value}`\n      );\n      this.setState({\n        previous: null,\n        next: null,\n        pokemons: resultType.data.pokemon.map((pokemon) => {\n          return {\n            name: pokemon.pokemon.name,\n            url: pokemon.pokemon.url,\n          };\n        }),\n        lastSelectedPokemon: null,\n        isFiltered: true,\n        limit: 10,\n        offset: 0,\n      });\n    }\n  }\n\n  async handleNavigation(direction) {\n    switch (direction) {\n      case \"top\":\n        if (\n          this.state.lastSelectedPokemon !== null &&\n          parseInt(this.state.lastSelectedPokemon.dataset.index) !== 9\n        ) {\n          if (\n            this.state.lastSelectedPokemon.nextSibling.dataset.index - 1 !==\n            0\n          )\n            this.handleClick(\n              this.state.lastSelectedPokemon.previousSibling,\n              this.state.lastSelectedPokemon.previousSibling.dataset.url,\n              \"navigation\"\n            );\n        } else if (\n          this.state.lastSelectedPokemon !== null &&\n          parseInt(this.state.lastSelectedPokemon.dataset.index) === 9\n        ) {\n          this.handleClick(\n            this.state.lastSelectedPokemon.previousSibling,\n            this.state.lastSelectedPokemon.previousSibling.dataset.url,\n            \"navigation\"\n          );\n        }\n\n        break;\n      case \"bottom\":\n        if (\n          this.state.lastSelectedPokemon !== null &&\n          parseInt(this.state.lastSelectedPokemon.dataset.index) + 1 !== 10\n        )\n          this.handleClick(\n            this.state.lastSelectedPokemon.nextSibling,\n            this.state.lastSelectedPokemon.nextSibling.dataset.url,\n            \"navigation\"\n          );\n\n        break;\n      case \"right\":\n        if (this.state.isFiltered) {\n          const newLimit = this.state.limit + 10;\n          const newOffset = this.state.offset + 10;\n          if (this.state.pokemons.length - newLimit > -10) {\n            this.removeLastSelectedPokemon();\n            this.setState({\n              limit: newLimit,\n              offset: newOffset,\n            });\n          }\n        } else {\n          if (this.state.next !== null) {\n            const result = await this.getPokemon(this.state.next);\n            this.removeLastSelectedPokemon();\n            this.setState({ lastSelectedPokemon: null });\n            this.setPokemon(result);\n          }\n        }\n\n        break;\n      case \"left\":\n        if (this.state.isFiltered) {\n          const newLimit = this.state.limit - 10;\n          const newOffset = this.state.offset - 10;\n          if (newLimit > 0) {\n            this.removeLastSelectedPokemon();\n            this.setState({\n              limit: newLimit,\n              offset: newOffset,\n            });\n          }\n        } else {\n          if (this.state.previous !== null) {\n            const result = await this.getPokemon(this.state.previous);\n            this.removeLastSelectedPokemon();\n            this.setState({ lastSelectedPokemon: null });\n            this.setPokemon(result);\n          }\n        }\n        break;\n      default:\n        return;\n    }\n  }\n\n  render() {\n    let pokemonList = null;\n    if (\n      this.state.pokemons !== null &&\n      this.state.pokemons.length !== 0 &&\n      this.state.types !== null\n    )\n      pokemonList = this.state.isFiltered\n        ? this.state.pokemons\n            .slice([this.state.offset], [this.state.limit])\n            .map((pokemon, index) => (\n              <div\n                className=\"pokemon__list__wrapper__item\"\n                data-index={index}\n                data-url={pokemon.url}\n                key={index}\n                onClick={(e) => {\n                  this.handleClick(e, pokemon.url, \"click\");\n                }}\n              >\n                {pokemon.name}\n              </div>\n            ))\n        : this.state.pokemons.map((pokemon, index) => (\n            <div\n              className=\"pokemon__list__wrapper__item\"\n              data-index={index}\n              data-url={pokemon.url}\n              key={index}\n              onClick={(e) => {\n                this.handleClick(e, pokemon.url, \"click\");\n              }}\n            >\n              {pokemon.name}\n            </div>\n          ));\n\n    if (this.state.pokemons !== null && this.state.pokemons.length === 0)\n      pokemonList = (\n        <div className=\"pokemon__list__wrapper__item pokemon__list__wrapper__item--empty\">\n          Pokemon list is empty\n        </div>\n      );\n\n    let clearButton = this.state.isFiltered ? (\n      <button\n        onClick={() => {\n          this.handleClickFilter();\n        }}\n      >\n        Clear\n      </button>\n    ) : null;\n\n    return this.state.pokemons !== null && this.state.types !== null ? (\n      <div className=\"pokemon__list\">\n        <div className=\"pokemon__list__wrapper\">{pokemonList}</div>\n        <div className=\"pokemon__list__filter\">\n          <div className=\"pokemon__list__filter__datalist\">\n            <label htmlFor=\"type_list\">Filter:</label>\n            <input\n              list=\"types\"\n              id=\"type_list\"\n              name=\"type_list\"\n              onChange={(e) => {\n                this.handleChange(e, \"datalist\");\n              }}\n            />\n            <datalist id=\"types\">\n              {this.state.types.map((type, index) => (\n                <option value={type} key={index}>\n                  {type}\n                </option>\n              ))}\n            </datalist>\n          </div>\n\n          {clearButton}\n        </div>\n        {this.state.pokemons !== null && this.state.pokemons.length !== 0 ? (\n          <div className=\"pokemon__list__ball\"></div>\n        ) : null}\n        <div className=\"pokemon__list__hello\"></div>\n        <div className=\"pokemon__list__navigation\">\n          <button\n            onClick={() => {\n              this.handleNavigation(\"top\");\n            }}\n          ></button>\n          <button\n            onClick={() => {\n              this.handleNavigation(\"right\");\n            }}\n          ></button>\n          <button\n            onClick={() => {\n              this.handleNavigation(\"bottom\");\n            }}\n          ></button>\n          <button\n            onClick={() => {\n              this.handleNavigation(\"left\");\n            }}\n          ></button>\n        </div>\n      </div>\n    ) : null;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./Pokemon.css\";\n\nimport PokemonDetails from \"./PokemonDetails\";\nimport PokemonList from \"./PokemonList\";\n\nimport axios from \"axios\";\n\nexport default class Pokemon extends Component {\n  state = {\n    selectedAttribute: null,\n  };\n\n  getUrl = (url) => {\n    return axios.get(url);\n  };\n\n  getSelectedPokemon = async (url) => {\n    const result = await this.getUrl(url);\n    this.setState({\n      selectedAttribute: {\n        id: result.data.id,\n        abilities: result.data.abilities.map((ability) => {\n          return ability.ability.name;\n        }),\n        moves: result.data.moves.map((move) => {\n          return move.move.name;\n        }),\n        name: result.data.name,\n        image: result.data.sprites.front_default,\n        stats: result.data.stats.map((stat) => {\n          return {\n            title: stat.stat.name,\n            value: stat.base_stat,\n          };\n        }),\n        types: result.data.types.map((type) => {\n          return type.type.name;\n        }),\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"pokemon\">\n        <PokemonDetails attribute={this.state.selectedAttribute} />\n        <div className=\"pokemon__divider\">\n          <div></div>\n          <div></div>\n        </div>\n        <PokemonList getSelectedPokemon={this.getSelectedPokemon} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Pokemon from \"./components/Pokemon/Pokemon\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Pokemon />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}